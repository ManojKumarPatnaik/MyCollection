Shared services model:
- IaaS : 
	You keep : App, Data, Runtime, Middleware, O/s
	Ms Keep : Virtualization, server, storage, Networking

- PaaS : 
	you keep : App, Data
	MS keep : Runtime, Middleware, O/s, Virtualization, server, storage, Networking

- SaaS :
	MS keep everythingabove listed

=============================================================================================================================
ùó™ùóµùóÆùòÅ ùó∂ùòÄ ùóÆùóª ùóîùó£ùóú ùóöùóÆùòÅùó≤ùòÑùóÆùòÜ?

An API management tool known as an ùóîùó£ùóú ùó¥ùóÆùòÅùó≤ùòÑùóÆùòÜ  sits between a client and a group of backend services. It performs the function of a reverse proxy by accepting all application programming interface (API) calls, aggregating the different services needed to fulfill them, and returning the right outcome.

By using API gateways, most enterprise APIs are deployed. User ùóÆùòÇùòÅùóµùó≤ùóªùòÅùó∂ùó∞ùóÆùòÅùó∂ùóºùóª, ùóøùóÆùòÅùó≤ ùóπùó∂ùó∫ùó∂ùòÅùòÄ, ùóÆùóªùó± ùòÄùòÅùóÆùòÅùó∂ùòÄùòÅùó∂ùó∞ùòÄ are common duties that API gateways take care of on behalf of a system of API services.

An API service receives a remote request and responds to it. But in reality, nothing is ever that easy. When you host large-scale APIs, take into account ùòÉùóÆùóøùó∂ùóºùòÇùòÄ ùó∞ùóºùóªùó∞ùó≤ùóøùóªùòÄ:

‚úÖ You use a ùóøùóÆùòÅùó≤ ùóπùó∂ùó∫ùó∂ùòÅùóÆùòÅùó∂ùóºùóª ùòÄùòÜùòÄùòÅùó≤ùó∫ ùóÆùóªùó± ùóÆùóª ùóÆùòÇùòÅùóµùó≤ùóªùòÅùó∂ùó∞ùóÆùòÅùó∂ùóºùóª ùòÄùó≤ùóøùòÉùó∂ùó∞ùó≤  to safeguard your APIs against abuse and excessive use.
‚úÖ You implemented ùóÆùóªùóÆùóπùòÜùòÅùó∂ùó∞ùòÄ ùóÆùóªùó± ùó∫ùóºùóªùó∂ùòÅùóºùóøùó∂ùóªùó¥ ùòÅùóºùóºùóπùòÄ because you want to know how people use your APIs.
‚úÖ You should link to a ùóΩùóÆùòÜùó≤ùó∫ùó≤ùóªùòÅ ùòÄùòÜùòÄùòÅùó≤ùó∫ if your APIs are monetized.
‚úÖ If you've chosen a ùó∫ùó∂ùó∞ùóøùóºùòÄùó≤ùóøùòÉùó∂ùó∞ùó≤ùòÄ ùóÆùóøùó∞ùóµùó∂ùòÅùó≤ùó∞ùòÅùòÇùóøùó≤, a single request can need calling hundreds of different programs.
‚úÖ Your clients will still want to be able to access all your services in ùóºùóªùó≤ ùóπùóºùó∞ùóÆùòÅùó∂ùóºùóª even when you add new API services over time and retire others.

So, ùóµùóºùòÑ ùó±ùóºùó≤ùòÄ ùó∂ùòÅ ùòÑùóºùóøùó∏ in general:

1. API gateway receives an HTTP request from a client.
2. When received it validates the request first.
3. API gateway checks with an identity provider about authentication/authorization.
4. The rate-limiting rules are then applied to the request.
5. Then, the API gateway finds the backend services and routes the request.

Also to this, the API gateway can handle ùó≥ùóÆùòÇùóπùòÅùòÄ (ùó∞ùó∂ùóøùó∞ùòÇùó∂ùòÅ ùóØùóøùó≤ùóÆùó∏ùó≤ùóø), ùóØùòÇùòÅ ùóÆùóπùòÄùóº ùó±ùóº ùóπùóºùó¥ùó¥ùó∂ùóªùó¥, ùó∞ùóÆùó∞ùóµùó∂ùóªùó¥ ùóÆùóªùó± ùó∫ùóºùóªùó∂ùòÅùóºùóøùó∂ùóªùó¥.

An ùó≤ùòÖùóÆùó∫ùóΩùóπùó≤ùòÄ ùóºùó≥ ùóîùó£ùóú ùóöùóÆùòÅùó≤ùòÑùóÆùòÜùòÄ are: Apigee (now part of Google Cloud), Express Gateway and Tyk API Gateway. The major public cloud providers offer API gateway tools specific to their platforms: Amazon API Gateway, Azure API Gateway, and Google Cloud API Gateway.
====================================================================================================================


Create Web App:
	App Service Plan (scale Up) : Dev/Test - share infra (F1) (1Gb mem 60 min compute), D1 (1Gb mem 240 min compute - $$), B2 (1.5Gb mem 60 min compute - $$)
	ACU : Azure compute unit
	- Production
	- Isolaed : dedicated hardware (I1V2, I2V2, I3V2)

Zone Redundancy : Instances where your application is deployed to data centers , applicable in production azure service plan

VM vs Web App : 
‚¶Å	in web app you can use apps like GitHub to continously deploy the app.
‚¶Å	Vm have to rebooot and thus have some downtime, with app services we can creaed new App service at new level and then they start sending traffic to the new app without downtime 

Network : to deploy your app in spcific app server. Option is available in production or higher ASP
	We can the use firewalls, control traffic etc
Monioring : enable Application insights
Tags: Identify mata data of your app
‚¶Å	you can deploy multiple web app in single app service plan
‚¶Å	We can also dot FTP type deployments
‚¶Å	Can upgrade the plan from scale up
‚¶Å	Sacaling out : manual scaling, 
‚¶Å	Deploying  :
		- Create web app in .net 
		- Publish  : Azure app service - target
‚¶Å	Deployment Slots : Production plan
			- To have other version of your application like staging, beta, dev etc
			- swap : staging can swap to prod and vice-versa
‚¶Å	Setting s: configuration - Application Setting- Put stuff here that overrides in web config files.
				Similarly cna secure connection strings
‚¶Å	Autoscaling : scale up : S1/S2 plans
		- Autoscalig specially comes with scale out : we can set the rule 
‚¶Å	Diagnostic Logs :  Monitoring -> Diagnostic Logs - configure sorage account - saved in storage acoounts
			- log stream needs to be shown from diagnostic logs
‚¶Å	Power shell :get-command *AzWebApp
	- New resource group New-AzResourceGroup -Name "powershellwebapp" -Location "EastUS"
	Create App service plan : 
		- New resource group New-AzResourceGroup  -ResourceGrouptName "nameof resourcegroup" -Name "powershellwebapp" -Location "EastUS" -Tier "Free"
	Create a new webapp
		- New resource group New-AzResourceGroup  -ResourceGrouptName "nameof resourcegroup" -Name "powershellwebapp" -Location "EastUS"  -AzureAppServicePlan "azureserviceplan123" 	
	-Create agroup
		az group create --name cliewebapp -- location eastus
		
